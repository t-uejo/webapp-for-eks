services:
  webserver:
    image: ${REGISTRY_HOST:+${REGISTRY_HOST:-}/}webapp-nginx:${TAG:-latest}
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./src/public:/var/www/html/public
      # ビルドが面倒な時にアンコメントしてください
      # - ./docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      # - ./docker/nginx/conf/conf.d:/etc/nginx/conf.d
      - php-sock:/var/run/php
    depends_on:
      app:
        condition: service_healthy

  app:
    image: ${REGISTRY_HOST:+${REGISTRY_HOST:-}/}webapp-php:${TAG:-latest}
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
    volumes:
      - ./src:/var/www/html
      - php-sock:/var/run/php
    environment:
      DB_HOST: db
      DB_NAME: mydatabase
      DB_USER: user
      DB_PASS: password
    healthcheck:
      test: ["CMD", "sh", "-c", "netstat -lx | grep php-fpm.sock || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 1s
    networks:
      - default
      - webapp-db-network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mysql:8.0
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-P", "3306"]
      interval: 10s
      timeout: 1s
      retries: 5
      start_period: 1s
    networks:
      - webapp-db-network
    volumes:
      - db-data:/var/lib/mysql

volumes:
  db-data:
  php-sock:

networks:
  default:
    name: webapp-network
    driver: bridge
  webapp-db-network:
    driver: bridge
